// Code generated by goctl. DO NOT EDIT.
package types

type User struct {
	ID            int    `json:"id"`
	Username      string `json:"username"`
	NickName      string `json:"nickname"`
	Password      string `json:"password"`
	LastLoginTime int    `json:"last_login_time"`
	UpdateTime    int    `json:"update_time"`
	CreateTime    int    `json:"create_time"`
	CreateUserID  int    `json:"create_user_id"`
	RoleID        int    `json:"role_id"`
}

type UserWithoutPassword struct {
	ID            int    `json:"id"`
	Username      string `json:"username"`
	NickName      string `json:"nickname"`
	Password      string `json:"password"`
	LastLoginTime int    `json:"last_login_time"`
	UpdateTime    int    `json:"update_time"`
	CreateTime    int    `json:"create_time"`
	CreateUserID  int    `json:"create_user_id"`
	RoleID        int    `json:"role_id"`
}

type LoginRequest struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Code uint8               `json:"code"`
	Msg  string              `json:"msg"`
	Data UserWithoutPassword `json:"data"`
}

type CreateUserRequest struct {
	UserName string `json:"user_name"`
	NickName string `json:"nick_name"`
	Password string `json:"password"`
	RoleID   int    `json:"role_id"`
}

type CreateUserResponse struct {
	Code uint8               `json:"code"`
	Msg  string              `json:"msg"`
	Data UserWithoutPassword `json:"data"`
}

type UpdateUserRequest struct {
	UserID   int    `path:"userid"`
	UserName string `json:"user_name,optional"`
	Password string `json:"password,optional"`
	NickName string `json:"nick_name,optional"`
	RoleID   int    `json:"role_id,optional"`
}

type UpdateUserResponse struct {
	Code uint8               `json:"code"`
	Msg  string              `json:"msg"`
	Data UserWithoutPassword `json:"data"`
}

type DeleteUserRequest struct {
	UserID int `path:"userid"`
}

type DeleteUserResponse struct {
	Code uint8  `json:"code"`
	Msg  string `json:"msg"`
}

type GetUsersRequest struct {
	Page   int `query:"page"`
	Offset int `query:"offset"`
}

type GetUsersResponse struct {
	Code uint8                 `json:"code"`
	Msg  string                `json:"msg"`
	Data []UserWithoutPassword `json:"data"`
}

type Power struct {
	ID         int    `json:"id"`
	Name       string `json:"name"`
	Method     string `json:"method"`
	URI        string `json:"uri"`
	CreateTime int    `json:"create_time"`
}

type GetPowersResponse struct {
	Code int     `json:"code"`
	Msg  string  `json:"msg"`
	Data []Power `json:"data"`
}

type Role struct {
	ID           int    `json:"id"`
	Name         string `json:"name"`
	CreateUserID int    `json:"create_user_id"`
	CreateTime   int    `json:"create_time"`
	UpdateTime   int    `json:"update_time"`
	PowerIDS     []int  `json:"power_ids"`
}

type GetRolesResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
	Data []Role `json:"data"`
}

type CreateRoleRequest struct {
	Name     string `json:"name"`
	PowerIDS int    `json:"power_ids"`
}

type CreateRoleResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
	Data Role   `json:"data"`
}

type ConfigResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type UpdateCommonConfigRequest struct {
}
